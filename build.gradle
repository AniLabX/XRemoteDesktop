import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

buildscript {
    repositories {
        maven { url "https://nexus.gluonhq.com/nexus/content/repositories/releases" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
        classpath 'io.franzbecker:gradle-lombok:5.0.0'
        classpath 'org.openjfx:javafx-plugin:0.0.14'
        classpath 'com.gluonhq:gluonfx-gradle-plugin:1.0.19'
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.franzbecker.gradle-lombok'
apply plugin: 'org.openjfx.javafxplugin'
apply plugin: 'com.gluonhq.gluonfx-gradle-plugin'

applicationName = 'XRemote Server'
group = 'com.crazyxacker.apps'
mainClassName = 'com.crazyxacker.apps.xremote.FXRunner'
version = '2.0'

compileJava.options.encoding = 'UTF-8'
System.setProperty('file.encoding', 'UTF-8')

repositories {
    mavenCentral()
    //noinspection JCenterRepository
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url 'https://nexus.gluonhq.com/nexus/content/repositories/releases/' }
}

OperatingSystem os = DefaultNativePlatform.currentOperatingSystem
gluonfx {
    appIdentifier = applicationName

    if (os.isWindows()) {
        graalvmHome = GRAALVM_WINDOWS_HOME
    } else if (os.isLinux()) {
        graalvmHome = GRAALVM_LINUX_HOME
    } else if (os.isMacOsX()) {
        graalvmHome = GRAALVM_MACOSX_HOME
    }
}

nativeBuild {
    applicationDefaultJvmArgs = [
            "-Djava.home=" + gluonfx.graalvmHome,
            "-Djava.awt.headless=true",
            "-Dfile.encoding=UTF-8",
            "-H:+AllowIncompleteClasspath",
            "-H:-IncludeMethodsData",
            "--no-fallback",
            "--enable-http",
            "--enable-https",
            "--allow-incomplete-classpath",
            "--static"
    ]
}

javafx {
    version = '20'
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

dependencies {
    // AnnotationsProcessors
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // SubstrateVM features
    compileOnly 'org.graalvm.nativeimage:svm:23.1.0'

    // JNA
    implementation 'net.java.dev.jna:jna:5.13.0'
    implementation 'net.java.dev.jna:jna-platform:5.13.0'

    // JavaFX
    implementation 'com.jfoenix:jfoenix:9.0.10'
    implementation 'org.controlsfx:controlsfx:9.0.0'
    implementation 'io.github.palexdev:materialfx:11.13.2'

    // Ikonli
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1'

    // JSON
    implementation 'com.google.code.gson:gson:2.8.9'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxjavafx:2.2.2'

    // Bonjour Service
    implementation 'de.mannodermaus.rxjava2:rxbonjour:2.0.0-RC1'
    implementation files("libs/rxbonjour-platform-desktop-2.0.0-RC1.jar")
    implementation 'de.mannodermaus.rxjava2:rxbonjour-driver-jmdns:2.0.0-RC1'

    // OkHttp3
    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.3'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.12.3'

    // Apache Commons
    implementation 'commons-io:commons-io:2.7'

    // Natural Comparator
    implementation 'net.grey-panther:natural-comparator:1.1'

    // 7Zip bindings
    implementation 'net.sf.sevenzipjbinding:sevenzipjbinding:16.02-2.01'
    implementation 'net.sf.sevenzipjbinding:sevenzipjbinding-all-platforms:16.02-2.01'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'XRemote Server',
                'Implementation-Version': version,
                'Main-Class': mainClassName,
                'Built-By': 'CrazyXacker'
    }
}

run {
    List<String> args = new ArrayList<String>() {{
        add("--add-opens=java.base/java.lang.reflect=ALL-UNNAMED")
        add("--add-exports=javafx.base/com.sun.javafx.runtime=ALL-UNNAMED")
    }}

    applicationDefaultJvmArgs = args
    jvmArgs = args
}